# Class: cve20113872
#
#   This class provides a convenient way to migrate a Puppet Agent
#   from one CA to a new CA.
#
# Parameters:
#
#  There are no class parameters, but the following facts are required:
#
# Actions:
#
#   * Do nothing if the agent posses a certificate issued by the
#     CA configured on the puppet master.  (The CA we're migrating to)
#   * Move ssldir to ssldir.previous
#   * Put known good localcacert and hostcrl files in place.
#   * Restart Puppet to generate a new CSR
#
# Requires:
#
#   * stdlib version 2.1.1
#   * pluginsync enabled.  The facts this class requires may not be distributed
#     to the agents if pluginsync is turned off.
#
# Sample Usage:
#
#     node default {
#       include cve20113872
#     }
#
class cve20113872 {
  $module = "cve20113872"

  # The certificate has /CN=Puppet CA: $hostname
  validate_re($agent_cert_on_disk_issuer, "^/CN=")
  # pe-puppet or puppet
  validate_re($agent_user, "puppet")
  # pe-puppet or puppet
  validate_re($agent_group, "puppet")
  # /etc/puppetlabs/puppet/ssl
  validate_re($agent_ssldir, '^/')
  # /etc/puppetlabs/puppet/ssl/certs
  validate_re($agent_certdir, '^/')
  # /etc/puppetlabs/puppet/ssl/certs/ca.pem
  validate_re($agent_localcacert, "^/.*?\.pem$")
  # /etc/puppetlabs/puppet/ssl/crl.pem
  validate_re($agent_hostcrl, "^/.*?\.pem$")
  # /var/run/pe-puppet/agent.pid
  validate_re($agent_pidfile, "^/.*?\.pid$")
  # Certname can be anything, but it can't be empty.
  validate_re($agent_certname, ".")
  # Agents PID to reload it mid-run
  validate_re($agent_pid, '^\d+$')
  # Agents vardir.  We'll put scripts in here.
  validate_re($agent_vardir, '^/')
  # Agents config file (puppet.conf)
  validate_re($agent_config, '^/.*/puppet.conf$')

  Exec { path => "/opt/puppet/bin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/opt/csw/bin" }
  File {
    require => Exec["CVE-2011-3872 step1"],
    notify  => Exec["CVE-2011-3872 Reload"],
    owner   => "${agent_user}",
    group   => "${agent_group}",
    mode    => '0644'
  }

  $master_ca_cn       = inline_template('<%= Puppet[:ca_name] %>')
  $master_localcacert = inline_template('<%= Puppet[:localcacert] %>')
  $master_hostcrl     = inline_template('<%= Puppet[:hostcrl] %>')
  $master_ssldir      = inline_template('<%= Puppet[:ssldir] %>')

  if ($agent_cert_on_disk_issuer != "/CN=${master_ca_cn}") {
    notify { "CVE-2011-3872 Migration":
      message => "Migrating ${agent_certname}",
      before  => Exec["CVE-2011-3872 step1"],
    }
    exec { "CVE-2011-3872 step1":
      command => "mv '${agent_ssldir}' '${agent_ssldir}.previous'",
      creates => "${agent_ssldir}.previous",
    }
    file { "${agent_ssldir}":
      ensure => directory,
      mode   => '0771',
    }
    file { "${agent_certdir}":
      ensure => directory,
      mode   => '0755',
    }
    # Configure the agent to trust the old and the new CA.
    # This file should have been generated by step1 of the "Fix"
    # It is a bundle of all the CA's the agent should trust.
    file { "CVE-2011-3872 Trusted CA Certificates":
      path    => "${agent_localcacert}",
      content => file("${master_ssldir}/certs/ca_bundle.pem"),
    }
    file { "CVE-2011-3872 Trusted CA Revocation Lists":
      path   => "${agent_hostcrl}",
      ensure => absent,
    }
    file { "${agent_vardir}/${module}":
      ensure => directory,
    }
    file { "${agent_vardir}/${module}/bin":
      ensure => directory,
    }
    file { "${agent_vardir}/${module}/bin/disable_revocation.rb":
      ensure  => file,
      mode    => 0755,
      content => template("${module}/disable_revocation.rb"),
      before  => Exec["CVE-2011-3872 Disable Revocation"],
    }
    exec { "CVE-2011-3872 Disable Revocation":
      command => "${agent_vardir}/${module}/bin/disable_revocation.rb '${agent_config}'",
      unless  => "sh -c 'puppet agent --configprint certificate_revocation | grep false'",
      before  => Exec["CVE-2011-3872 Reload"],
    }
    exec { "CVE-2011-3872 Reload":
      command => "kill -HUP ${agent_pid}",
    }
  }
}

